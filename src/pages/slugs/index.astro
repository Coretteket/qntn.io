---
import Layout from "@/components/layout.astro";
import Show from "@/components/show.astro";

import { AddSlug, UpdateSlug } from "@/islands/slugs";

import { db, redirect } from "@/lib/db";
import { reverse, verifyToken } from "@/lib/server";
import { loadTranslations } from "@/lib/translate";

import cx from "clsx";

await loadTranslations(Astro.props.lang);

const error = new URLSearchParams(Astro.url.search).get("error");
const added = new URLSearchParams(Astro.url.search).get("added");

const token = Astro.cookies.get("token");
const authed = verifyToken(token?.value);
console.log(authed);

const redirects = authed ? reverse(await db.select().from(redirect)) : [];
---

<script>
  // make error messages ephemeral
  const search = new URLSearchParams(location.search);
  if (search.get("error") || search.get("added"))
    history.replaceState({}, "", location.pathname);
</script>

<Layout title="Slugs">
  <section>
    <p class="text-lg leading-snug">
      You've found my secret page! I use this page to manage my redirects.
      Unless you know my password, it's not of much use to you.
    </p>
  </section>
  <section>
    <h2 class="mb-4 text-lg font-semibold text-neutral-100">Redirects</h2>
    <hr class="mb-4 border-neutral-700" />
    <Show when={error || added}>
      <div
        class={cx(
          "my-2 mt-6 rounded border px-3 py-2 font-medium",
          error && "border-red-600/50 bg-red-950/50",
          added && "border-sky-600/50 bg-sky-950/50",
        )}
      >
        <Show when={error}>
          {error}
        </Show>
        <Show when={added}>
          Successfully added <a href={`https://${added}`}>{added}</a>.
        </Show>
      </div>
    </Show>
    <Show when={!authed}>
      <form action="/slugs/login" method="POST">
        <input
          name="password"
          type="password"
          placeholder="Password"
          required
          class="my-2 w-full rounded border-neutral-700 bg-neutral-950 focus:border-pink-400 focus:ring-0"
        />
        <button
          class="my-3 w-full rounded border border-neutral-700 bg-neutral-800 py-1.5 font-semibold"
        >
          Log in
        </button>
      </form>
    </Show>
    <Show when={authed}>
      <div class="my-6 grid grid-flow-row gap-3">
        <AddSlug client:load />

        {
          redirects.map(({ id, slug, url }) => (
            <UpdateSlug {id} {slug} {url} client:load />
          ))
        }
        <form method="post" action="/slugs/logout">
          <button
            class="my-3 w-full rounded border border-neutral-700 bg-neutral-800 py-1.5 font-semibold"
          >
            Log out
          </button>
        </form>
      </div>
    </Show>
  </section>
</Layout>
